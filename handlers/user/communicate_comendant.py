import asyncio

from aiogram import Bot, types, Router
from aiogram.filters import Text
from aiogram.fsm.context import FSMContext
from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from data.keyboards import profile_keyboard, cancel_keyboard
from db.all_dormitories import Dormitory
from db.students_requests_for_admins import Request
from datetime import timedelta

from db.users import Users

from data.settings import InputMessage


com_comendant_router = Router()


@com_comendant_router.message(Text(text="–°–≤—è–∑—å —Å –∫–æ–º–µ–Ω–¥–∞–Ω—Ç–æ–ºüí¨", ignore_case=True))
async def com_commendant(message: types.Message, state: FSMContext):
    await message.reply("–û—Ç–ª–∏—á–Ω–æ, –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ—Å—å–±—É! –ü–æ—Å—Ç–∞—Ä–∞–π—Å—è –≤—Å–µ –æ–ø–∏—Å–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ,"
                        " —Ç–≤–æ–∏ –∏–Ω–∏—Ü–∏–∞–ª—ã –∏ –º–µ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –¥–æ–±–∞–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫ —Ç–µ–∫—Å—Ç—É —Ç–≤–æ–µ–π –∑–∞—è–≤–∫–∏."
                        " –ü–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–æ–∂–µ—Ç–µ"
                        " –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –æ–¥–Ω—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é",
                        reply_markup=cancel_keyboard)
    await state.set_state(InputMessage.message_to_comendant)


@com_comendant_router.message(InputMessage.message_to_comendant)
async def message_to_commendant(message: types.Message, state: FSMContext, bot: Bot):
    users_api = Users(message.from_user.id)
    floor = await users_api.get_floor()
    room = await users_api.get_room()
    try:
        if (floor is None) or (room is None):
            await message.reply("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ <b>–ù–ï –û–¢–ü–†–ê–í–õ–ï–ù–û</b> –∫–æ–º–µ–Ω–¥–∞–Ω—Ç–∞–º!"
                                " –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Ç—ã –≤–≤–µ–ª –≤—Å–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–∏!", reply_markup=profile_keyboard)
            await state.clear()
            return
        obchaga = await users_api.get_number_of_obchaga()
        request = Request(obchaga=obchaga, user_id=message.from_user.id, floor=floor, room=room)
        keyboard = InlineKeyboardBuilder()
        keyboard.row(types.InlineKeyboardButton(text="–ü—Ä–∏–Ω—è—Ç—å –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É", callback_data=f"accept_processing|"
                                                                                          f"{obchaga}|"
                                                                                          f"{request.request_id}"))
        admins_obchaga = await Dormitory(obchaga=obchaga).get_obchaga_admins()
        if message.photo is None:
            text_message = (f"–í–∞–º –ø—Ä–∏—à–ª–∞ –∑–∞—è–≤–∫–∞ ‚Ññ{request.request_id} –æ—Ç {await users_api.get_initials()}"
                            f" —Å <b>{floor}</b> —ç—Ç–∞–∂–∞"
                            f" –∏–∑ –∫–æ–º–Ω–∞—Ç—ã <b>{room}</b>:\n{message.text}\n"
                            f"–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: <b>{str(message.date + timedelta(hours=3))[:-6]}</b>")
            task_list = [asyncio.create_task(bot.send_message(chat_id=user,
                                                              text=text_message,
                                                              reply_markup=keyboard.as_markup()))
                         for user in admins_obchaga.keys()]
            messages_for_admins = await asyncio.gather(*task_list)
            messages_ids = {message_admin.chat.id: message_admin.message_id for message_admin in messages_for_admins}
            await request.add_request(text_request=text_message, messages_for_admins=messages_ids,
                                      date=str(message.date + timedelta(hours=3)))
        else:
            if message.caption is None:
                caption = ""
            else:
                caption = message.caption
            text_message = (f"–í–∞–º –ø—Ä–∏—à–ª–∞ –∑–∞—è–≤–∫–∞ ‚Ññ{request.request_id} –æ—Ç {await users_api.get_initials()}"
                            f" —Å {floor} —ç—Ç–∞–∂–∞"
                            f" –∏–∑ –∫–æ–º–Ω–∞—Ç—ã {room}:\n{caption}\n"
                            f"<i>–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏:</i> <b>{str(message.date + timedelta(hours=3))[:-6]}</b>")
            task_list = [asyncio.create_task(bot.send_photo(chat_id=user, photo=message.photo[-1].file_id,
                                                            caption=text_message, reply_markup=keyboard.as_markup()))
                         for user in admins_obchaga.keys()]
            messages_for_admins = await asyncio.gather(*task_list)
            messages_ids = {message_admin.chat.id: message_admin.message_id for message_admin in messages_for_admins}
            await request.add_request(text_request=text_message,
                                      messages_for_admins=messages_ids,
                                      photo_id=message.photo[-1].file_id,
                                      date=str(message.date + timedelta(hours=3)))
        await message.reply(f"–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–æ–º–µ–Ω–¥–∞–Ω—Ç–∞–º! –ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏:"
                            f" {request.request_id}",
                            reply_markup=profile_keyboard)
        await state.clear()
    except:
        await message.reply("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ <b>–ù–ï –û–¢–ü–†–ê–í–õ–ï–ù–û</b> –∫–æ–º–µ–Ω–¥–∞–Ω—Ç–∞–º!"
                            " –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Ç—ã –≤–≤–µ–ª –≤—Å–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–∏!", reply_markup=profile_keyboard)
        await state.clear()